kind: Service
apiVersion: v1
metadata:
  name: prometheus
  labels:
    k8s-app: prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: prometheus
spec:
  ports:
    # Exposes `http` and `TCP` ports `9090` using the default `ClusterIP` Service type
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
  # Ensures clients are routed to the same Prometheus Pod, which is necessary to get consistent dashboards in a highly-available setup. 
  # To learn more about Prometheus high availability, 
  # consult https://github.com/coreos/prometheus-operator/blob/master/Documentation/high-availability.md#prometheus
  sessionAffinity: ClientIP
  selector:
    k8s-app: prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-promethius
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.org/client-max-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    kubernetes.io/ingress.class: "nginx"
spec:
  #tls:
  #- secretName: rtmedia-tls
  rules:
  - host: "prometh.example.com"
    http:
      paths:
      - path: /
        backend:
          serviceName: prometheus
          servicePort: 9090